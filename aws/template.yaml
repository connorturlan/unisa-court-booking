AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  unisa-court-booking

  Sample SAM Template for unisa-court-booking

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 128

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Resources:
  CourtBookingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/bookings/
      Handler: bookings
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        BookingEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /booking
            Method: ANY
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          LOCAL: false

  CourtSessionsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/sessions/
      Handler: sessions
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        SessionEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /sessions
            Method: ANY
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          LOCAL: false

  CourtManagerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/manager/
      Handler: sessions
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        SessionEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /manager
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          LOCAL: false

  # CourtBookingFunctionIamRole:
  #   AssumeRolePolicyDocument:
  #     Statement:
  #       - Action: sts:AssumeRole
  #         Effect: Allow
  #         Principal:
  #           Service: lambda.amazonaws.com
  #     Version: "2012-10-17"
  #   Description: ""
  #   MaxSessionDuration: 3600
  #   Path: /
  #   RoleId: AROAUMEJG2P3IJV5BQIJO
  #   RoleName: unisa-court-booking-CourtSessionsFunctionRole-qxodNb2Gxz1y

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CourtBookingAPI:
    Description: UniSA Court Bookin API Gateway endpoint URL for Prod environment
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/{proxy+}"

  CourtBookingFunction:
    Description: UniSA Court Booking Lambda for DynamoDB integration
    Value: !GetAtt CourtBookingFunction.Arn
  CourtBookingFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt CourtBookingFunctionRole.Arn

  CourtSessionsFunction:
    Description: UniSA Court Booking Lambda for DynamoDB integration
    Value: !GetAtt CourtSessionsFunction.Arn
  CourtSessionsFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt CourtSessionsFunctionRole.Arn

  CourtManagerFunction:
    Description: UniSA Court Booking Lambda for DynamoDB integration
    Value: !GetAtt CourtManagerFunction.Arn
  CourtManagerFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt CourtManagerFunctionRole.Arn
